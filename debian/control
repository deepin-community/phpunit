Source: phpunit
Section: php
Priority: optional
Maintainer: Debian PHP PEAR Maintainers <pkg-php-pear@lists.alioth.debian.org>
Uploaders: Prach Pongpanich <prach@debian.org>,
           David Pr√©vot <taffit@debian.org>
Build-Depends: debhelper-compat (= 13),
               dh-sequence-phpcomposer,
               help2man,
               php-codecoverage,
               php-deepcopy,
               php-doctrine-instantiator,
               php-invoker,
               php-mbstring,
               php-phar-io-manifest,
               php-soap,
               php-timer,
               phpab,
               phpunit-cli-parser,
               phpunit-code-unit,
               phpunit-comparator,
               phpunit-diff,
               phpunit-environment,
               phpunit-global-state,
               phpunit-object-enumerator,
               phpunit-resource-operations,
               phpunit-type (>= 3),
               pkg-php-tools (>= 1.41~)
Standards-Version: 4.6.2
Rules-Requires-Root: no
Vcs-Git: https://salsa.debian.org/php-team/pear/phpunit.git -b debian/bookworm
Vcs-Browser: https://salsa.debian.org/php-team/pear/phpunit
Homepage: https://phpunit.de/

Package: phpunit
Architecture: all
Depends: ${misc:Depends}, ${phpcomposer:Debian-require}
Replaces: ${phpcomposer:Debian-conflict}, ${phpcomposer:Debian-replace}
Conflicts: ${phpcomposer:Debian-conflict}
Breaks: ${phpcomposer:Debian-replace}
Suggests: ${phpcomposer:Debian-suggest}
Provides: ${phpcomposer:Debian-conflict}, ${phpcomposer:Debian-provide}
Description: Unit testing suite for PHP
 Unit testing allows you to write small test methods which verify units of
 functionality in your program.  It is a powerful technique for improving the
 quality of your software, preventing regressions, and allowing confident
 refactoring of your code.
 .
 PHPUnit is a unit testing suite for the PHP language, modelled on the xUnit
 testing framework, designed by Kent Beck and Erich Gamma.  If you've used
 JUnit (for Java), PyUnit (for Python), CxxUnit (for C++), or any of the
 other equivalents for other languages, the API for this package should seem
 fairly familiar.  If you've never written unit tests before, the PHPUnit
 API is simple to learn and use.
